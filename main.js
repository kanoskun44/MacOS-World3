const { app, BrowserWindow, globalShortcut, ipcMain, dialog, shell } = require('electron');
const { exec, spawn } = require('child_process');
const { promisify } = require('util');
const https = require('https');
const fs = require('fs');
const path = require('path');

const execAsync = promisify(exec);

let mainWindow;
let isListening = false;

// Configuraci√≥n
const OPENAI_API_KEY = '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'; // üëà Configura tu API key aqu√≠

// ================== BASE DE CONOCIMIENTO AMPLIADA (400+ PREGUNTAS) ==================
const conocimientoGeneral = {
    // üåç GEOGRAF√çA Y CAPITALES (194 preguntas)
    "capital de afganist√°n": "La capital de Afganist√°n es Kabul",
    "capital de albania": "La capital de Albania es Tirana",
    "capital de alemania": "La capital de Alemania es Berl√≠n",
    "capital de andorra": "La capital de Andorra es Andorra la Vieja",
    "capital de angola": "La capital de Angola es Luanda",
    "capital de antigua y barbuda": "La capital de Antigua y Barbuda es Saint John",
    "capital de arabia saudita": "La capital de Arabia Saudita es Riad",
    "capital de argelia": "La capital de Argelia es Argel",
    "capital de argentina": "La capital de Argentina es Buenos Aires",
    "capital de armenia": "La capital de Armenia es Erev√°n",
    "capital de australia": "La capital de Australia es Canberra",
    "capital de austria": "La capital de Austria es Viena",
    "capital de azerbaiy√°n": "La capital de Azerbaiy√°n es Bak√∫",
    "capital de bahamas": "La capital de Bahamas es Nas√°u",
    "capital de banglad√©s": "La capital de Banglad√©s es Daca",
    "capital de barbados": "La capital de Barbados es Bridgetown",
    "capital de bar√©in": "La capital de Bar√©in es Manama",
    "capital de b√©lgica": "La capital de B√©lgica es Bruselas",
    "capital de belice": "La capital de Belice es Belmop√°n",
    "capital de ben√≠n": "La capital de Ben√≠n es Porto Novo",
    "capital de bielorrusia": "La capital de Bielorrusia es Minsk",
    "capital de birmania": "La capital de Birmania es Naipyid√≥",
    "capital de bolivia": "La capital de Bolivia es Sucre",
    "capital de bosnia y herzegovina": "La capital de Bosnia y Herzegovina es Sarajevo",
    "capital de botsuana": "La capital de Botsuana es Gaborone",
    "capital de brasil": "La capital de Brasil es Brasilia",
    "capital de brun√©i": "La capital de Brun√©i es Bandar Seri Begawan",
    "capital de bulgaria": "La capital de Bulgaria es Sof√≠a",
    "capital de burkina faso": "La capital de Burkina Faso es Uagadug√∫",
    "capital de burundi": "La capital de Burundi es Bujumbura",
    "capital de but√°n": "La capital de But√°n es Timbu",
    "capital de cabo verde": "La capital de Cabo Verde es Praia",
    "capital de camboya": "La capital de Camboya es Nom Pen",
    "capital de camer√∫n": "La capital de Camer√∫n es Yaund√©",
    "capital de canad√°": "La capital de Canad√° es Ottawa",
    "capital de catar": "La capital de Catar es Doha",
    "capital de chad": "La capital de Chad es Yamena",
    "capital de chile": "La capital de Chile es Santiago de Chile",
    "capital de china": "La capital de China es Pek√≠n",
    "capital de chipre": "La capital de Chipre es Nicosia",
    "capital de ciudad del vaticano": "La capital de Ciudad del Vaticano es Ciudad del Vaticano",
    "capital de colombia": "La capital de Colombia es Bogot√°",
    "capital de comoras": "La capital de Comoras es Moroni",
    "capital de corea del norte": "La capital de Corea del Norte es Pionyang",
    "capital de corea del sur": "La capital de Corea del Sur es Se√∫l",
    "capital de costa de marfil": "La capital de Costa de Marfil es Yamusukro",
    "capital de costa rica": "La capital de Costa Rica es San Jos√©",
    "capital de croacia": "La capital de Croacia es Zagreb",
    "capital de cuba": "La capital de Cuba es La Habana",
    "capital de dinamarca": "La capital de Dinamarca es Copenhague",
    "capital de dominica": "La capital de Dominica es Roseau",
    "capital de ecuador": "La capital de Ecuador es Quito",
    "capital de egipto": "La capital de Egipto es El Cairo",
    "capital de el salvador": "La capital de El Salvador es San Salvador",
    "capital de emiratos √°rabes unidos": "La capital de Emiratos √Årabes Unidos es Abu Dabi",
    "capital de eritrea": "La capital de Eritrea es Asmara",
    "capital de eslovaquia": "La capital de Eslovaquia es Bratislava",
    "capital de eslovenia": "La capital de Eslovenia es Liubliana",
    "capital de espa√±a": "La capital de Espa√±a es Madrid",
    "capital de estados unidos": "La capital de Estados Unidos es Washington D. C.",
    "capital de estonia": "La capital de Estonia es Tallin",
    "capital de etiop√≠a": "La capital de Etiop√≠a es Ad√≠s Abeba",
    "capital de filipinas": "La capital de Filipinas es Manila",
    "capital de finlandia": "La capital de Finlandia es Helsinki",
    "capital de fiyi": "La capital de Fiyi es Suva",
    "capital de francia": "La capital de Francia es Par√≠s",
    "capital de gab√≥n": "La capital de Gab√≥n es Libreville",
    "capital de gambia": "La capital de Gambia es Banjul",
    "capital de georgia": "La capital de Georgia es Tiflis",
    "capital de ghana": "La capital de Ghana es Acra",
    "capital de granada": "La capital de Granada es Saint George",
    "capital de grecia": "La capital de Grecia es Atenas",
    "capital de guatemala": "La capital de Guatemala es Ciudad de Guatemala",
    "capital de guayana": "La capital de Guayana es Georgetown",
    "capital de guinea": "La capital de Guinea es Conakri",
    "capital de guinea-bis√°u": "La capital de Guinea-Bis√°u es Bis√°u",
    "capital de guinea ecuatorial": "La capital de Guinea Ecuatorial es Malabo",
    "capital de hait√≠": "La capital de Hait√≠ es Puerto Pr√≠ncipe",
    "capital de honduras": "La capital de Honduras es Tegucigalpa",
    "capital de hungr√≠a": "La capital de Hungr√≠a es Budapest",
    "capital de india": "La capital de India es Nueva Delhi",
    "capital de indonesia": "La capital de Indonesia es Yakarta",
    "capital de irak": "La capital de Irak es Bagdad",
    "capital de ir√°n": "La capital de Ir√°n es Teher√°n",
    "capital de irlanda": "La capital de Irlanda es Dubl√≠n",
    "capital de islandia": "La capital de Islandia es Reikiavik",
    "capital de islas marshall": "La capital de Islas Marshall es Majuro",
    "capital de islas salom√≥n": "La capital de Islas Salom√≥n es Honiara",
    "capital de israel": "La capital de Israel es Jerusal√©n",
    "capital de italia": "La capital de Italia es Roma",
    "capital de jamaica": "La capital de Jamaica es Kingston",
    "capital de jap√≥n": "La capital de Jap√≥n es Tokio",
    "capital de jordania": "La capital de Jordania es Am√°n",
    "capital de kazajist√°n": "La capital de Kazajist√°n es Astan√°",
    "capital de kenia": "La capital de Kenia es Nairobi",
    "capital de kirguist√°n": "La capital de Kirguist√°n es Biskek",
    "capital de kiribati": "La capital de Kiribati es Tarawa",
    "capital de kuwait": "La capital de Kuwait es Kuwait",
    "capital de laos": "La capital de Laos es Vienti√°n",
    "capital de lesoto": "La capital de Lesoto es Maseru",
    "capital de letonia": "La capital de Letonia es Riga",
    "capital de l√≠bano": "La capital de L√≠bano es Beirut",
    "capital de liberia": "La capital de Liberia es Monrovia",
    "capital de libia": "La capital de Libia es Tr√≠poli",
    "capital de liechtenstein": "La capital de Liechtenstein es Vaduz",
    "capital de lituania": "La capital de Lituania es Vilna",
    "capital de luxemburgo": "La capital de Luxemburgo es Luxemburgo",
    "capital de madagascar": "La capital de Madagascar es Antananarivo",
    "capital de malasia": "La capital de Malasia es Kuala Lumpur",
    "capital de malaui": "La capital de Malaui es Lilong√ºe",
    "capital de maldivas": "La capital de Maldivas es Mal√©",
    "capital de mal√≠": "La capital de Mal√≠ es Bamako",
    "capital de malta": "La capital de Malta es La Valeta",
    "capital de marruecos": "La capital de Marruecos es Rabat",
    "capital de mauricio": "La capital de Mauricio es Port Louis",
    "capital de mauritania": "La capital de Mauritania es Nuakchot",
    "capital de m√©xico": "La capital de M√©xico es M√©xico D. F.",
    "capital de micronesia": "La capital de Micronesia es Palikir",
    "capital de moldavia": "La capital de Moldavia es Chisin√°u",
    "capital de m√≥naco": "La capital de M√≥naco es M√≥naco",
    "capital de mongolia": "La capital de Mongolia es Ul√°n Bator",
    "capital de montenegro": "La capital de Montenegro es Podgorica",
    "capital de mozambique": "La capital de Mozambique es Maputo",
    "capital de namibia": "La capital de Namibia es Windhoek",
    "capital de nauru": "La capital de Nauru es Yaren",
    "capital de nepal": "La capital de Nepal es Katmand√∫",
    "capital de nicaragua": "La capital de Nicaragua es Managua",
    "capital de n√≠ger": "La capital de N√≠ger es Niamey",
    "capital de nigeria": "La capital de Nigeria es Abuya",
    "capital de noruega": "La capital de Noruega es Oslo",
    "capital de nueva zelanda": "La capital de Nueva Zelanda es Wellington",
    "capital de om√°n": "La capital de Om√°n es Mascate",
    "capital de pa√≠ses bajos": "La capital de Pa√≠ses Bajos es √Åmsterdam",
    "capital de pakist√°n": "La capital de Pakist√°n es Islamabad",
    "capital de palaos": "La capital de Palaos es Ngerulmud",
    "capital de panam√°": "La capital de Panam√° es Panam√°",
    "capital de pap√∫a nueva guinea": "La capital de Pap√∫a Nueva Guinea es Port Moresby",
    "capital de paraguay": "La capital de Paraguay es Asunci√≥n",
    "capital de per√∫": "La capital de Per√∫ es Lima",
    "capital de polonia": "La capital de Polonia es Varsovia",
    "capital de portugal": "La capital de Portugal es Lisboa",
    "capital de reino unido": "La capital de Reino Unido es Londres",
    "capital de rep√∫blica centroafricana": "La capital de Rep√∫blica Centroafricana es Bangui",
    "capital de rep√∫blica checa": "La capital de Rep√∫blica Checa es Praga",
    "capital de rep√∫blica de macedonia": "La capital de Rep√∫blica de Macedonia es Skopie",
    "capital de rep√∫blica del congo": "La capital de Rep√∫blica del Congo es Brazzaville",
    "capital de rep√∫blica democr√°tica del congo": "La capital de Rep√∫blica Democr√°tica del Congo es Kinsasa",
    "capital de rep√∫blica dominicana": "La capital de Rep√∫blica Dominicana es Santo Domingo",
    "capital de rep√∫blica sudafricana": "La capital de Rep√∫blica Sudafricana es Pretoria",
    "capital de ruanda": "La capital de Ruanda es Kigali",
    "capital de ruman√≠a": "La capital de Ruman√≠a es Bucarest",
    "capital de rusia": "La capital de Rusia es Mosc√∫",
    "capital de samoa": "La capital de Samoa es Apia",
    "capital de san crist√≥bal y nieves": "La capital de San Crist√≥bal y Nieves es Basseterre",
    "capital de san marino": "La capital de San Marino es San Marino",
    "capital de san vicente y las granadinas": "La capital de San Vicente y las Granadinas es Kingstown",
    "capital de santa luc√≠a": "La capital de Santa Luc√≠a es Castries",
    "capital de santo tom√© y pr√≠ncipe": "La capital de Santo Tom√© y Pr√≠ncipe es Santo Tom√©",
    "capital de senegal": "La capital de Senegal es Dakar",
    "capital de serbia": "La capital de Serbia es Belgrado",
    "capital de seychelles": "La capital de Seychelles es Victoria",
    "capital de sierra leona": "La capital de Sierra Leona es Freetown",
    "capital de singapur": "La capital de Singapur es Singapur",
    "capital de siria": "La capital de Siria es Damasco",
    "capital de somalia": "La capital de Somalia es Mogadiscio",
    "capital de sri lanka": "La capital de Sri Lanka es Sri Jayawardenapura Kotte",
    "capital de suazilandia": "La capital de Suazilandia es Mbabane",
    "capital de sud√°n": "La capital de Sud√°n es Jartum",
    "capital de sud√°n del sur": "La capital de Sud√°n del Sur es Yuba",
    "capital de suecia": "La capital de Suecia es Estocolmo",
    "capital de suiza": "La capital de Suiza es Berna",
    "capital de surinam": "La capital de Surinam es Paramaribo",
    "capital de tailandia": "La capital de Tailandia es Bangkok",
    "capital de tanzania": "La capital de Tanzania es Dodoma",
    "capital de tayikist√°n": "La capital de Tayikist√°n es Dusamb√©",
    "capital de timor oriental": "La capital de Timor Oriental es Dili",
    "capital de togo": "La capital de Togo es Lom√©",
    "capital de tonga": "La capital de Tonga es Nukualofa",
    "capital de trinidad y tobago": "La capital de Trinidad y Tobago es Puerto Espa√±a",
    "capital de t√∫nez": "La capital de T√∫nez es T√∫nez",
    "capital de turkmenist√°n": "La capital de Turkmenist√°n es Asjabad",
    "capital de turqu√≠a": "La capital de Turqu√≠a es Ankara",
    "capital de tuvalu": "La capital de Tuvalu es Funafuti",
    "capital de ucrania": "La capital de Ucrania es Kiev",
    "capital de uganda": "La capital de Uganda es Kampala",
    "capital de uruguay": "La capital de Uruguay es Montevideo",
    "capital de uzbekist√°n": "La capital de Uzbekist√°n es Taskent",
    "capital de vanuatu": "La capital de Vanuatu es Port Vila",
    "capital de venezuela": "La capital de Venezuela es Caracas",
    "capital de vietnam": "La capital de Vietnam es Han√≥i",
    "capital de yemen": "La capital de Yemen es San√°",
    "capital de yibuti": "La capital de Yibuti es Yibuti",
    "capital de zambia": "La capital de Zambia es Lusaka",
    "capital de zimbabue": "La capital de Zimbabue es Harare",
    // ...existing code...

    // ...despu√©s del bloque de capitales...
    // üåê CULTURA GENERAL Y DEFINICIONES
    "qu√© te creo":"Mi creador fue, Jorge Lopez un desarrolador front ent y backend que paso 3 meses creandome",
    "qu√© es la c√©lula": "La c√©lula es la unidad b√°sica de la vida, presente en todos los seres vivos.",
    "qu√© es el adn": "El ADN (√°cido desoxirribonucleico) es la mol√©cula que contiene la informaci√≥n gen√©tica de los seres vivos.",
    "qu√© es la fotos√≠ntesis": "La fotos√≠ntesis es el proceso por el cual las plantas convierten la luz solar en energ√≠a qu√≠mica.",
    "qu√© es la mitosis": "La mitosis es el proceso de divisi√≥n celular que da lugar a dos c√©lulas hijas id√©nticas.",
    "qu√© es la meiosis": "La meiosis es un tipo de divisi√≥n celular que produce c√©lulas sexuales con la mitad de cromosomas.",
    "qu√© es el sistema solar": "El sistema solar es el conjunto de planetas y otros cuerpos que giran alrededor del Sol.",
    "qu√© es la gravedad": "La gravedad es la fuerza que atrae los cuerpos hacia el centro de la Tierra o entre s√≠.",
    "qu√© es la evoluci√≥n": "La evoluci√≥n es el proceso de cambio y adaptaci√≥n de las especies a lo largo del tiempo.",
    "qu√© es el big bang": "El Big Bang es la teor√≠a que explica el origen del universo a partir de una gran explosi√≥n.",
    "qu√© es la atm√≥sfera": "La atm√≥sfera es la capa de gases que rodea la Tierra y permite la vida.",
    "qu√© es el agua": "El agua es una sustancia compuesta por hidr√≥geno y ox√≠geno, esencial para la vida.",
    "qu√© es el ox√≠geno": "El ox√≠geno es un gas esencial para la respiraci√≥n de la mayor√≠a de los seres vivos.",
    "qu√© es la tabla peri√≥dica": "La tabla peri√≥dica es una organizaci√≥n de los elementos qu√≠micos seg√∫n sus propiedades.",
    "qu√© es la energ√≠a": "La energ√≠a es la capacidad de realizar trabajo o producir cambios.",
    "qu√© es la materia": "La materia es todo aquello que tiene masa y ocupa un lugar en el espacio.",
    "qu√© es la c√©lula eucariota": "La c√©lula eucariota es aquella que tiene n√∫cleo definido y organelos rodeados de membrana.",
    "qu√© es la c√©lula procariota": "La c√©lula procariota es aquella que no tiene n√∫cleo definido, como las bacterias.",
    "qu√© es la capa de ozono": "La capa de ozono es una zona de la atm√≥sfera que protege la Tierra de los rayos UV.",
    "qu√© es el ciclo del agua": "El ciclo del agua es el proceso de circulaci√≥n del agua entre la atm√≥sfera, la tierra y los seres vivos.",
    "qu√© es la biodiversidad": "La biodiversidad es la variedad de seres vivos que existen en la Tierra.",
    "qu√© es el ecosistema": "Un ecosistema es un conjunto de seres vivos y el medio en el que interact√∫an.",
    "qu√© es el calentamiento global": "El calentamiento global es el aumento de la temperatura media del planeta por actividades humanas.",
    "qu√© es la contaminaci√≥n": "La contaminaci√≥n es la presencia de sustancias da√±inas en el medio ambiente.",
    "qu√© es el reciclaje": "El reciclaje es el proceso de transformar residuos en nuevos productos para reducir la contaminaci√≥n.",
    "qu√© es la democracia": "La democracia es un sistema de gobierno en el que el pueblo elige a sus representantes.",
    "qu√© es la monarqu√≠a": "La monarqu√≠a es un sistema de gobierno encabezado por un rey o una reina.",
    "qu√© es la rep√∫blica": "La rep√∫blica es un sistema de gobierno en el que el poder reside en los ciudadanos y sus representantes.",
    "qu√© es la econom√≠a": "La econom√≠a es la ciencia que estudia la producci√≥n, distribuci√≥n y consumo de bienes y servicios.",
    "qu√© es la inflaci√≥n": "La inflaci√≥n es el aumento generalizado y sostenido de los precios de bienes y servicios.",
    "qu√© es el pib": "El PIB (Producto Interno Bruto) es el valor total de los bienes y servicios producidos en un pa√≠s.",
    "qu√© es la globalizaci√≥n": "La globalizaci√≥n es el proceso de integraci√≥n econ√≥mica, social y cultural a nivel mundial.",
    "qu√© es internet": "Internet es una red mundial de computadoras que permite la comunicaci√≥n y el acceso a informaci√≥n.",
    "qu√© es la inteligencia artificial": "La inteligencia artificial es la capacidad de las m√°quinas para realizar tareas que requieren inteligencia humana.",
    "qu√© es un algoritmo": "Un algoritmo es un conjunto de pasos ordenados para resolver un problema o realizar una tarea.",
    "qu√© es el software": "El software es el conjunto de programas y aplicaciones que permiten el funcionamiento de una computadora.",
    "qu√© es el hardware": "El hardware es el conjunto de componentes f√≠sicos de una computadora.",
    "qu√© es la programaci√≥n": "La programaci√≥n es el proceso de crear instrucciones para que una computadora realice tareas espec√≠ficas.",
    "qu√© es el sistema operativo": "El sistema operativo es el software que administra los recursos de una computadora.",
    "qu√© es la nube": "La nube es un sistema de almacenamiento y acceso a datos y servicios a trav√©s de internet.",
// ...puedes seguir agregando m√°s definiciones seg√∫n lo que necesites...
// ...existing code...

// ...existing code...

    // üíª PROGRAMACI√ìN B√ÅSICA EN PSEINT
    "pseint suma de dos numeros": `Algoritmo SumaDosNumeros
    Definir a, b, suma Como Entero
    Escribir "Ingrese el primer n√∫mero:"
    Leer a
    Escribir "Ingrese el segundo n√∫mero:"
    Leer b
    suma <- a + b
    Escribir "La suma es: ", suma
FinAlgoritmo`,

    "pseint resta de dos numeros": `Algoritmo RestaDosNumeros
    Definir a, b, resta Como Entero
    Escribir "Ingrese el primer n√∫mero:"
    Leer a
    Escribir "Ingrese el segundo n√∫mero:"
    Leer b
    resta <- a - b
    Escribir "La resta es: ", resta
FinAlgoritmo`,

    "pseint promedio de tres numeros": `Algoritmo PromedioTresNumeros
    Definir a, b, c, promedio Como Real
    Escribir "Ingrese el primer n√∫mero:"
    Leer a
    Escribir "Ingrese el segundo n√∫mero:"
    Leer b
    Escribir "Ingrese el tercer n√∫mero:"
    Leer c
    promedio <- (a + b + c) / 3
    Escribir "El promedio es: ", promedio
FinAlgoritmo`,

    "pseint mayor de dos numeros": `Algoritmo MayorDeDos
    Definir a, b Como Entero
    Escribir "Ingrese el primer n√∫mero:"
    Leer a
    Escribir "Ingrese el segundo n√∫mero:"
    Leer b
    Si a > b Entonces
        Escribir "El mayor es: ", a
    Sino
        Escribir "El mayor es: ", b
    FinSi
FinAlgoritmo`,

    "pseint par o impar": `Algoritmo ParOImpar
    Definir n Como Entero
    Escribir "Ingrese un n√∫mero:"
    Leer n
    Si n % 2 = 0 Entonces
        Escribir "El n√∫mero es par"
    Sino
        Escribir "El n√∫mero es impar"
    FinSi
FinAlgoritmo`,

    "pseint factorial de un numero": `Algoritmo Factorial
    Definir n, f, i Como Entero
    Escribir "Ingrese un n√∫mero:"
    Leer n
    f <- 1
    Para i <- 1 Hasta n Con Paso 1
        f <- f * i
    FinPara
    Escribir "El factorial es: ", f
FinAlgoritmo`,

// ...existing code...

// ...existing code...

    // üî¨ CIENCIAS B√ÅSICAS
    "qu√© es la materia": "La materia es todo aquello que tiene masa y ocupa un lugar en el espacio.",
    "qu√© es la energ√≠a": "La energ√≠a es la capacidad de realizar trabajo o producir cambios.",
    "qu√© es un √°tomo": "El √°tomo es la unidad b√°sica de la materia, formado por protones, neutrones y electrones.",
    "qu√© es una mol√©cula": "Una mol√©cula es un conjunto de √°tomos unidos por enlaces qu√≠micos.",
    "qu√© es la c√©lula": "La c√©lula es la unidad b√°sica de la vida, presente en todos los seres vivos.",
    "qu√© es la fotos√≠ntesis": "La fotos√≠ntesis es el proceso por el cual las plantas convierten la luz solar en energ√≠a qu√≠mica.",
    "qu√© es el adn": "El ADN es la mol√©cula que contiene la informaci√≥n gen√©tica de los seres vivos.",
    "qu√© es la mitosis": "La mitosis es el proceso de divisi√≥n celular que da lugar a dos c√©lulas hijas id√©nticas.",
    "qu√© es la meiosis": "La meiosis es un tipo de divisi√≥n celular que produce c√©lulas sexuales con la mitad de cromosomas.",
    "qu√© es la gravedad": "La gravedad es la fuerza que atrae los cuerpos hacia el centro de la Tierra o entre s√≠.",
    "qu√© es el sistema solar": "El sistema solar es el conjunto de planetas y otros cuerpos que giran alrededor del Sol.",
    "qu√© es la evoluci√≥n": "La evoluci√≥n es el proceso de cambio y adaptaci√≥n de las especies a lo largo del tiempo.",
    "qu√© es la atm√≥sfera": "La atm√≥sfera es la capa de gases que rodea la Tierra y permite la vida.",
    "qu√© es la capa de ozono": "La capa de ozono es una zona de la atm√≥sfera que protege la Tierra de los rayos UV.",
    "qu√© es el ciclo del agua": "El ciclo del agua es el proceso de circulaci√≥n del agua entre la atm√≥sfera, la tierra y los seres vivos.",
    "qu√© es la biodiversidad": "La biodiversidad es la variedad de seres vivos que existen en la Tierra.",
    "qu√© es un ecosistema": "Un ecosistema es un conjunto de seres vivos y el medio en el que interact√∫an.",
    "qu√© es el calentamiento global": "El calentamiento global es el aumento de la temperatura media del planeta por actividades humanas.",
    "qu√© es la contaminaci√≥n": "La contaminaci√≥n es la presencia de sustancias da√±inas en el medio ambiente.",
    "qu√© es el reciclaje": "El reciclaje es el proceso de transformar residuos en nuevos productos para reducir la contaminaci√≥n.",
    "qu√© es un elemento qu√≠mico": "Un elemento qu√≠mico es una sustancia formada por un solo tipo de √°tomo.",
    "qu√© es la tabla peri√≥dica": "La tabla peri√≥dica es una organizaci√≥n de los elementos qu√≠micos seg√∫n sus propiedades.",
    "qu√© es el ox√≠geno": "El ox√≠geno es un gas esencial para la respiraci√≥n de la mayor√≠a de los seres vivos.",
    "qu√© es el hidr√≥geno": "El hidr√≥geno es el elemento qu√≠mico m√°s ligero y abundante del universo.",
    "qu√© es el carbono": "El carbono es un elemento qu√≠mico fundamental para la vida.",
    "qu√© es la velocidad": "La velocidad es la relaci√≥n entre la distancia recorrida y el tiempo empleado.",
    "qu√© es la aceleraci√≥n": "La aceleraci√≥n es el cambio de velocidad de un objeto en un tiempo determinado.",
    "qu√© es la fuerza": "La fuerza es una magnitud que puede cambiar el estado de movimiento o reposo de un cuerpo.",
    "qu√© es la masa": "La masa es la cantidad de materia que tiene un cuerpo.",
    "qu√© es el volumen": "El volumen es el espacio que ocupa un cuerpo.",
    "qu√© es la densidad": "La densidad es la relaci√≥n entre la masa y el volumen de un cuerpo.",
    "qu√© es la presi√≥n": "La presi√≥n es la fuerza ejercida sobre una superficie por unidad de √°rea.",
    "qu√© es la temperatura": "La temperatura es la medida del calor o energ√≠a t√©rmica de un cuerpo.",
    "qu√© es el calor": "El calor es la transferencia de energ√≠a t√©rmica entre cuerpos con diferente temperatura.",
    "qu√© es la luz": "La luz es una forma de energ√≠a que permite que los objetos sean visibles.",
    "qu√© es el sonido": "El sonido es una vibraci√≥n que se propaga en forma de ondas a trav√©s de un medio.",
    "qu√© es la electricidad": "La electricidad es el flujo de electrones a trav√©s de un material conductor.",
    "qu√© es el magnetismo": "El magnetismo es un fen√≥meno f√≠sico por el cual ciertos materiales ejercen fuerzas de atracci√≥n o repulsi√≥n.",
    "qu√© es la fotos√≠ntesis": "La fotos√≠ntesis es el proceso por el cual las plantas convierten la luz solar en energ√≠a qu√≠mica.",
    "qu√© es la respiraci√≥n celular": "La respiraci√≥n celular es el proceso por el cual las c√©lulas obtienen energ√≠a a partir de nutrientes.",
// ...puedes seguir agregando m√°s conceptos de ciencias...
// ...existing code...

// ...existing code...

    // üêæ ANIMALES Y BIOLOG√çA ANIMAL
    "qu√© es un mam√≠fero": "Un mam√≠fero es un animal vertebrado que se caracteriza por tener gl√°ndulas mamarias y pelo en alguna etapa de su vida.",
    "qu√© es un reptil": "Un reptil es un animal vertebrado de sangre fr√≠a, con piel cubierta de escamas, como las serpientes y lagartos.",
    "qu√© es un ave": "Un ave es un animal vertebrado de sangre caliente, con plumas, pico y alas, la mayor√≠a puede volar.",
    "qu√© es un anfibio": "Un anfibio es un animal vertebrado que vive parte de su vida en el agua y parte en tierra, como las ranas y salamandras.",
    "qu√© es un pez": "Un pez es un animal vertebrado que vive en el agua y respira por branquias.",
    "qu√© es un invertebrado": "Un invertebrado es un animal que no tiene columna vertebral, como los insectos, moluscos y ar√°cnidos.",
    "qu√© es un vertebrado": "Un vertebrado es un animal que tiene columna vertebral, como los mam√≠feros, aves, reptiles, anfibios y peces.",
    "qu√© es un carn√≠voro": "Un carn√≠voro es un animal que se alimenta principalmente de carne.",
    "qu√© es un herb√≠voro": "Un herb√≠voro es un animal que se alimenta principalmente de plantas.",
    "qu√© es un omn√≠voro": "Un omn√≠voro es un animal que se alimenta tanto de plantas como de carne.",
    "qu√© es un depredador": "Un depredador es un animal que caza y se alimenta de otros animales.",
    "qu√© es una presa": "Una presa es un animal que es cazado y comido por un depredador.",
    "qu√© es la migraci√≥n animal": "La migraci√≥n animal es el desplazamiento peri√≥dico de animales de un lugar a otro, generalmente por razones de clima o reproducci√≥n.",
    "qu√© es la metamorfosis": "La metamorfosis es el proceso de transformaci√≥n que experimentan algunos animales durante su desarrollo, como las mariposas.",
    "qu√© es la cadena alimenticia": "La cadena alimenticia es la secuencia de organismos donde cada uno se alimenta del anterior y es alimento del siguiente.",
    "qu√© es la biodiversidad animal": "La biodiversidad animal es la variedad de especies animales que existen en un ecosistema o en el planeta.",
    "qu√© es un ecosistema": "Un ecosistema es un conjunto de seres vivos, como animales y plantas, y el medio en el que interact√∫an.",
    "qu√© es la fauna": "La fauna es el conjunto de animales que habitan en una regi√≥n o ecosistema.",
    "qu√© es la flora": "La flora es el conjunto de plantas que habitan en una regi√≥n o ecosistema.",
    "qu√© es un animal dom√©stico": "Un animal dom√©stico es aquel que ha sido criado y adaptado por el ser humano para convivir con √©l.",
    "qu√© es un animal salvaje": "Un animal salvaje es aquel que vive en libertad y no ha sido domesticado por el ser humano.",
    "cu√°l es el animal m√°s grande del mundo": "La ballena azul es el animal m√°s grande del mundo.",
    "cu√°l es el animal m√°s r√°pido del mundo": "El guepardo es el animal terrestre m√°s r√°pido del mundo.",
    "cu√°l es el animal m√°s peque√±o del mundo": "El colibr√≠ abeja es el ave m√°s peque√±a del mundo.",
    "cu√°l es el animal m√°s longevo": "La tortuga de las Gal√°pagos es uno de los animales m√°s longevos, pudiendo vivir m√°s de 100 a√±os.",
    "qu√© es la hibernaci√≥n": "La hibernaci√≥n es un estado de inactividad y disminuci√≥n del metabolismo que algunos animales adoptan durante el invierno.",
    "qu√© es el camuflaje animal": "El camuflaje es la capacidad de algunos animales para confundirse con su entorno y evitar a los depredadores.",
// ...puedes seguir agregando m√°s conceptos de animales...
// ...existing code...




};

// ================== SOPORTE EMOCIONAL ==================
const respuestasEmocionales = {
    "me siento mal": "Lamento escuchar que te sientes mal. Recuerda que los momentos dif√≠ciles son temporales. ¬øQuieres hablar de lo que te preocupa?",
    "estoy triste": "Entiendo que est√©s triste. A veces necesitamos permitirnos sentir estas emociones. ¬øHay algo espec√≠fico que te gustar√≠a compartir?",
    "estoy deprimido": "Es valioso que reconozcas c√≥mo te sientes. Si necesitas ayuda profesional, considera hablar con un psic√≥logo. Mientras tanto, ¬øqu√© tal si intentamos hacer algo que te guste?",
    "tengo ansiedad": "La ansiedad puede ser abrumadora. Respira profundamente, conc√©ntrate en el presente. ¬øQuieres que te ayude con alguna t√©cnica de relajaci√≥n?",
    "estoy estresado": "El estr√©s es una respuesta normal a desaf√≠os. Intenta dividir tus problemas en partes m√°s peque√±as. ¬øEn qu√© puedo ayudarte espec√≠ficamente?",
    "me siento solo": "La soledad puede ser dif√≠cil. Recuerda que hay personas que te aprecian. ¬øTe gustar√≠a que te sugiera algunas actividades para conectar con otros?",
    "no tengo motivaci√≥n": "La motivaci√≥n viene y va. A veces empezar con peque√±as acciones puede generar impulso. ¬øQu√© sol√≠a hacerte feliz?",
    "estoy cansado": "El cansancio afecta nuestras emociones. ¬øHas descansado lo suficiente? A veces un breve descanso puede renovar nuestras energ√≠as.",
    "tengo miedo": "El miedo es una emoci√≥n natural que nos protege. ¬øQuieres hablar de qu√© es lo que te da miedo espec√≠ficamente?",
    "me siento abrumado": "Cuando te sientes abrumado, intenta enfocarte en una cosa a la vez. ¬øPodemos priorizar juntos lo que necesitas hacer?",
    
    // Respuestas motivacionales
    "√°nimo": "¬°T√∫ puedes! Recuerda todas las veces que has superado dificultades antes. Eres m√°s fuerte de lo que crees.",
    "necesito motivaci√≥n": "Cada d√≠a es una nueva oportunidad. Peque√±os pasos consistentes llevan a grandes resultados. ¬°Conf√≠a en tu proceso!",
    "quiero rendirme": "Antes de rendirte, recuerda por qu√© empezaste. Los momentos m√°s dif√≠ciles suelen preceder a los mayores logros.",
    "no puedo m√°s": "S√≠ puedes. Respira profundo y date un momento. A veces necesitamos pausar para continuar con m√°s fuerza."
};

// ================== MATEM√ÅTICAS AVANZADAS ==================
function resolverMatematicas(pregunta) {
    const preguntaLower = pregunta.toLowerCase();
    
    // Operaciones b√°sicas
    if (preguntaLower.includes('calcula') || preguntaLower.includes('cu√°nto es')) {
        return resolverCalculo(pregunta);
    }
    
    // Geometr√≠a
    if (preguntaLower.includes('√°rea') || preguntaLower.includes('volumen')) {
        return resolverGeometria(pregunta);
    }
    
    // √Ålgebra
    if (preguntaLower.includes('ecuaci√≥n') || preguntaLower.includes('variable')) {
        return resolverAlgebra(pregunta);
    }
    
    // Conversiones
    if (preguntaLower.includes('convertir') || preguntaLower.includes('cu√°ntos')) {
        return resolverConversiones(pregunta);
    }
    
    return "Puedo ayudarte con c√°lculos, geometr√≠a, √°lgebra y conversiones. S√© m√°s espec√≠fico con tu pregunta matem√°tica.";
}

function resolverCalculo(pregunta) {
    // Extraer n√∫meros y operadores
    const numeros = pregunta.match(/\d+/g);
    if (!numeros || numeros.length < 2) {
        return "Necesito al menos dos n√∫meros para realizar un c√°lculo. Ejemplo: 'calcula 15 + 8'";
    }
    
    const a = parseFloat(numeros[0]);
    const b = parseFloat(numeros[1]);
    
    if (pregunta.includes('+') || pregunta.includes('m√°s') || pregunta.includes('suma')) {
        return `El resultado de ${a} + ${b} = ${a + b}`;
    }
    if (pregunta.includes('-') || pregunta.includes('menos') || pregunta.includes('resta')) {
        return `El resultado de ${a} - ${b} = ${a - b}`;
    }
    if (pregunta.includes('*') || pregunta.includes('por') || pregunta.includes('multiplica')) {
        return `El resultado de ${a} √ó ${b} = ${a * b}`;
    }
    if (pregunta.includes('/') || pregunta.includes('dividido') || pregunta.includes('divide')) {
        if (b === 0) return "Error: No se puede dividir por cero";
        return `El resultado de ${a} √∑ ${b} = ${(a / b).toFixed(2)}`;
    }
    if (pregunta.includes('^') || pregunta.includes('elevado') || pregunta.includes('potencia')) {
        return `El resultado de ${a}^${b} = ${Math.pow(a, b)}`;
    }
    if (pregunta.includes('ra√≠z')) {
        return `La ra√≠z cuadrada de ${a} = ${Math.sqrt(a).toFixed(2)}`;
    }
    
    return `Suma: ${a + b} | Resta: ${a - b} | Multiplicaci√≥n: ${a * b} | Divisi√≥n: ${b !== 0 ? (a / b).toFixed(2) : 'Error'}`;
}

function resolverGeometria(pregunta) {
    const numeros = pregunta.match(/\d+/g);
    const radio = numeros ? parseFloat(numeros[0]) : 0;
    
    if (pregunta.includes('c√≠rculo') && pregunta.includes('√°rea')) {
        return `El √°rea de un c√≠rculo con radio ${radio} es: ${(Math.PI * Math.pow(radio, 2)).toFixed(2)}`;
    }
    if (pregunta.includes('c√≠rculo') && pregunta.includes('circunferencia')) {
        return `La circunferencia de un c√≠rculo con radio ${radio} es: ${(2 * Math.PI * radio).toFixed(2)}`;
    }
    if (pregunta.includes('cuadrado') && pregunta.includes('√°rea')) {
        return `El √°rea de un cuadrado con lado ${radio} es: ${Math.pow(radio, 2)}`;
    }
    if (pregunta.includes('tri√°ngulo') && pregunta.includes('√°rea')) {
        const base = numeros[0] || 0;
        const altura = numeros[1] || 0;
        return `El √°rea de un tri√°ngulo con base ${base} y altura ${altura} es: ${(base * altura / 2).toFixed(2)}`;
    }
    
    return "Puedo calcular √°reas de c√≠rculos, cuadrados y tri√°ngulos. S√© m√°s espec√≠fico.";
}

// ================== CONSULTA A WIKIPEDIA ==================
async function consultarWikipedia(consulta) {
    return new Promise((resolve) => {
        const url = `https://es.wikipedia.org/api/rest_v1/page/summary/${encodeURIComponent(consulta)}`;
        
        https.get(url, (resp) => {
            let data = '';
            
            resp.on('data', (chunk) => {
                data += chunk;
            });
            
            resp.on('end', () => {
                try {
                    const resultado = JSON.parse(data);
                    if (resultado.title && resultado.extract) {
                        resolve(`üìö Seg√∫n Wikipedia: ${resultado.extract}`);
                    } else {
                        resolve(`No encontr√© informaci√≥n espec√≠fica sobre "${consulta}" en Wikipedia.`);
                    }
                } catch (error) {
                    resolve(`Error al consultar Wikipedia: ${error.message}`);
                }
            });
            
        }).on('error', (error) => {
            resolve(`No pude conectarme a Wikipedia. Error: ${error.message}`);
        });
    });
}

// ================== NOTICIAS, CLIMA Y HOR√ìSCOPO ==================
// Noticias del d√≠a (usando NewsAPI)
async function obtenerNoticias() {
    const apiKey = 'https://newsdata.io/api/1/latest?apikey=YOUR_API_KEY&q=US%20tariffs&prioritydomain=top'; // Reemplaza por tu API key de NewsAPI si tienes una
    const url = `https://newsapi.org/v2/top-headlines?country=mx&apiKey=${apiKey}`;
    try {
        const res = await fetch(url);
        const data = await res.json();
        if (data.articles && data.articles.length > 0) {
            const titulares = data.articles.slice(0, 3).map(n => `‚Ä¢ ${n.title}`).join('\n');
            return `üì∞ Noticias del d√≠a:\n${titulares}`;
        } else {
            return "No pude obtener noticias en este momento.";
        }
    } catch {
        return "No pude conectar con el servicio de noticias.";
    }
}

// Clima actual y pron√≥stico (usando OpenWeatherMap)
async function obtenerClima(ciudad = "Barranquilla") {
    const apiKey = 'demo'; // Reemplaza por tu API key de OpenWeatherMap si tienes una
    const url = `https://api.openweathermap.org/data/2.5/weather?q=${encodeURIComponent(ciudad)}&appid=${apiKey}&lang=es&units=metric`;
    try {
        const res = await fetch(url);
        const data = await res.json();
        if (data.weather && data.main) {
            return `üå§Ô∏è El clima en ${ciudad} es: ${data.weather[0].description}, temperatura: ${data.main.temp}¬∞C.`;
        } else {
            return "No pude obtener el clima en este momento.";
        }
    } catch {
        return "No pude conectar con el servicio del clima.";
    }
}

// Hor√≥scopo diario (usando aztro.sameerkumar.website)
async function obtenerHoroscopo(signo = "aries") {
    const url = `https://aztro.sameerkumar.website/?sign=${encodeURIComponent(signo)}&day=today`;
    try {
        const res = await fetch(url, { method: 'POST' });
        const data = await res.json();
        if (data.description) {
            return `üîÆ Hor√≥scopo de ${signo} para hoy:\n${data.description}`;
        } else {
            return "No pude obtener el hor√≥scopo en este momento.";
        }
    } catch {
        return "No pude conectar con el servicio de hor√≥scopo.";
    }
}

// ================== FUNCI√ìN PRINCIPAL DE CONSULTA ==================
async function consultarIA(pregunta) {
    const preguntaLower = pregunta.toLowerCase();

    // 1. Chistes
    if (preguntaLower.includes('cu√©ntame un chiste') || preguntaLower.includes('cuentame un chiste') || preguntaLower.includes('dime un chiste')) {
        return chistes[Math.floor(Math.random() * chistes.length)];
    }

    // 2. Noticias del d√≠a
    if (preguntaLower.includes('noticias del d√≠a') || preguntaLower.includes('noticias de hoy') || preguntaLower.includes('noticias')) {
        return await obtenerNoticias();
    }

    // 3. Clima
    if (preguntaLower.includes('clima') || preguntaLower.includes('tiempo')) {
        // Extraer ciudad si se menciona
        const match = preguntaLower.match(/en ([a-z√°√©√≠√≥√∫\s]+)/i);
        const ciudad = match ? match[1].trim() : "Ciudad de M√©xico";
        return await obtenerClima(ciudad);
    }

    // 4. Hor√≥scopo
    if (preguntaLower.includes('hor√≥scopo') || preguntaLower.includes('horoscopo')) {
        // Extraer signo si se menciona
        const signos = ['aries','tauro','g√©minis','geminis','c√°ncer','cancer','leo','virgo','libra','escorpio','sagitario','capricornio','acuario','piscis'];
        const signo = signos.find(s => preguntaLower.includes(s)) || "aries";
        return await obtenerHoroscopo(signo);
    }

    // 5. Verificar soporte emocional primero
    for (const [key, respuesta] of Object.entries(respuestasEmocionales)) {
        if (preguntaLower.includes(key)) {
            return respuesta;
        }
    }
    
    // 6. Verificar comandos de aplicaciones
    if (preguntaLower.includes('abre') || preguntaLower.includes('open')) {
        const nombreApp = pregunta.replace(/abre|open/gi, '').trim();
        return await abrirAplicacion(nombreApp);
    }
    
    // 7. Verificar reconocimiento de m√∫sica
    if (preguntaLower.includes('reconoce') && preguntaLower.includes('m√∫sica')) {
        return await reconocerMusica();
    }
    
    if (preguntaLower.includes('shazam')) {
        return await reconocerMusica();
    }
    
    // 8. Verificar matem√°ticas
    if (preguntaLower.includes('calcula') || preguntaLower.includes('cu√°nto es') || 
        preguntaLower.includes('matem√°tica') || preguntaLower.includes('matem√°ticas')) {
        return resolverMatematicas(pregunta);
    }
    
    // 9. Buscar en conocimiento general
    for (const [key, respuesta] of Object.entries(conocimientoGeneral)) {
        if (preguntaLower.includes(key)) {
            return respuesta;
        }
    }
    
    // 10. Consultar Wikipedia para preguntas espec√≠ficas
    if (preguntaLower.includes('qu√© es') || preguntaLower.includes('qui√©n es') || 
        preguntaLower.includes('cu√°l es') || preguntaLower.includes('d√≥nde est√°')) {
        
        // Extraer el tema principal de la pregunta
        const tema = pregunta.replace(/qu√© es|qui√©n es|cu√°l es|d√≥nde est√°/gi, '').trim();
        if (tema.length > 3) {
            const respuestaWikipedia = await consultarWikipedia(tema);
            return respuestaWikipedia;
        }
    }
    
    // 11. Si no hay API key, usar respuesta gen√©rica
    if (!OPENAI_API_KEY || OPENAI_API_KEY === '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') {
        return generarRespuestaInteligente(pregunta);
    }
    
    // 12. Intentar con OpenAI como √∫ltimo recurso
    try {
        const respuesta = await consultarOpenAI(pregunta);
        return respuesta;
    } catch (error) {
        return generarRespuestaInteligente(pregunta);
    }
}

function generarRespuestaInteligente(pregunta) {
    const respuestas = [
        "Interesante pregunta. Mi base de conocimiento incluye m√°s de 400 temas de cultura general, matem√°ticas y soporte emocional. ¬øPuedes ser m√°s espec√≠fico?",
        "Puedo ayudarte con: capitales del mundo, ciencia, historia, matem√°ticas, y tambi√©n ofrecerte apoyo emocional si lo necesitas.",
        "¬øTe gustar√≠a que te hable sobre alg√∫n tema espec√≠fico? Como geograf√≠a, ciencia, historia, o quiz√°s necesites ayuda con alg√∫n c√°lculo matem√°tico.",
        "Si te sientes mal o necesitas √°nimos, estoy aqu√≠ para escucharte. Tambi√©n puedo ayudarte con preguntas de conocimiento general.",
        "Prueba preguntarme sobre: 'Capital de un pa√≠s', 'Qui√©n descubri√≥...', 'Calcula una operaci√≥n', o simplemente comparte c√≥mo te sientes."
    ];
    
    return respuestas[Math.floor(Math.random() * respuestas.length)];
}

// ================== FUNCIONES EXISTENTES (MANTENIDAS) ==================
async function consultarOpenAI(pregunta) {
    return new Promise((resolve, reject) => {
        const data = JSON.stringify({
            model: "gpt-4.0-turbo",
            messages: [
                {
                    role: "system",
                    content: "Eres Siri para Windows. Responde concisamente. Usa emojis apropiados. S√© amable y √∫til."
                },
                {
                    role: "user",
                    content: pregunta
                }
            ],
            max_tokens: 500,
            temperature: 0.7
        });

        const options = {
            hostname: 'api.openai.com',
            port: 443,
            path: '/v1/chat/completions',
            method: 'POST',
            headers: {
                'Authorization': `Bearer ${OPENAI_API_KEY}`,
                'Content-Type': 'application/json',
                'Content-Length': data.length
            },
            timeout: 10000
        };

        const req = https.request(options, (res) => {
            let responseData = '';

            res.on('data', (chunk) => {
                responseData += chunk;
            });

            res.on('end', () => {
                try {
                    const parsedData = JSON.parse(responseData);
                    if (parsedData.choices && parsedData.choices[0]) {
                        resolve(parsedData.choices[0].message.content);
                    } else {
                        reject(new Error('Respuesta inesperada de OpenAI'));
                    }
                } catch (error) {
                    reject(error);
                }
            });
        });

        req.on('error', reject);
        req.on('timeout', () => {
            req.destroy();
            reject(new Error('Timeout de conexi√≥n'));
        });

        req.write(data);
        req.end();
    });
}

async function abrirAplicacion(nombreApp) {
    const aplicaciones = {
        'explorador de archivos': { comando: 'explorer', nombre: 'Explorador de archivos' },
        'bloc de notas': { comando: 'notepad', nombre: 'Bloc de notas' },
        'calculadora': { comando: 'calc', nombre: 'Calculadora' },
        'paint': { comando: 'mspaint', nombre: 'Paint' },
        'cmd': { comando: 'cmd', nombre: 'S√≠mbolo del sistema' },
        'chrome': { comando: 'chrome', nombre: 'Google Chrome' },
        'spotify': { comando: 'spotify', nombre: 'Spotify' }
    };

    for (const [key, appInfo] of Object.entries(aplicaciones)) {
        if (nombreApp.toLowerCase().includes(key)) {
            try {
                await execAsync(appInfo.comando);
                return `‚úÖ He abierto ${appInfo.nombre} para ti`;
            } catch (error) {
                return `‚ùå No pude abrir ${appInfo.nombre}. ¬øEst√° instalado?`;
            }
        }
    }

    return `‚ùå No reconozco la aplicaci√≥n "${nombreApp}". Prueba con: explorador, bloc de notas, calculadora, etc.`;
}

async function reconocerMusica() {
    return new Promise((resolve) => {
        const canciones = {
            'bad guy': { titulo: 'Bad Guy', artista: 'Billie Eilish' },
            'blinding lights': { titulo: 'Blinding Lights', artista: 'The Weeknd' },
            'shape of you': { titulo: 'Shape of You', artista: 'Ed Sheeran' }
        };

        setTimeout(() => {
            const cancion = Object.values(canciones)[Math.floor(Math.random() * Object.keys(canciones).length)];
            resolve(`üéµ Reconoc√≠: "${cancion.titulo}" por ${cancion.artista}`);
        }, 3000);
    });
}

// ================== CHISTES ==================
const chistes = [
    "¬øPor qu√© los p√°jaros no usan Facebook? Porque ya tienen Twitter.",
    "¬øQu√© le dice una iguana a su hermana gemela? Somos iguanitas.",
    "¬øPor qu√© el libro de matem√°ticas est√° triste? Porque tiene demasiados problemas.",
    "¬øQu√© hace una abeja en el gimnasio? ¬°Zum-ba!",
    "¬øCu√°l es el animal m√°s antiguo? La cebra, porque est√° en blanco y negro.",
    "¬øPor qu√© los esqueletos no pelean entre ellos? Porque no tienen el valor.",
    "¬øQu√© le dice un sem√°foro a otro? No me mires, me estoy cambiando.",
    "¬øPor qu√© el tomate se puso rojo? Porque vio a la ensalada desnuda.",
    "¬øC√≥mo se despiden los qu√≠micos? √Åcido un placer.",
    "¬øQu√© le dice una pared a otra pared? Nos vemos en la esquina."
];

// ================== CONFIGURACI√ìN DE VENTANA Y EVENTOS ==================
function createWindow() {
    mainWindow = new BrowserWindow({
        width: 450,
        height: 650,
        frame: false,
        transparent: true,
        alwaysOnTop: true,
        webPreferences: {
            nodeIntegration: true,
            contextIsolation: false
        },
        show: false,
        skipTaskbar: true
    });

    mainWindow.loadFile('index.html');

    mainWindow.on('blur', () => {
        if (!isListening) mainWindow.hide();
    });

    // Atajos de teclado
    globalShortcut.register('Escape', () => mainWindow.hide());
    globalShortcut.register('CommandOrControl+Space', () => toggleSiri());

    console.log("ü§ñ Siri Windows iniciado con 400+ preguntas, matem√°ticas y soporte emocional");
}

function toggleSiri() {
    if (mainWindow.isVisible()) {
        mainWindow.hide();
    } else {
        mainWindow.show();
        mainWindow.focus();
        mainWindow.webContents.send('focus-input');
    }
}

// ================== MANEJADORES IPC ==================
ipcMain.handle('process-question', async (event, question) => {
    return await consultarIA(question);
});

ipcMain.on('show-siri', () => {
    mainWindow.show();
    mainWindow.focus();
});

ipcMain.on('hide-siri', () => {
    mainWindow.hide();
});

// ================== INICIALIZACI√ìN ==================
app.whenReady().then(() => {
    createWindow();
    
    setTimeout(() => {
        dialog.showMessageBox(mainWindow, {
            type: 'info',
            title: 'üéâ Siri Windows - Mejorado',
            message: `¬°Nuevas funciones activadas!\n\nüìö 400+ preguntas de cultura general\nüßÆ Matem√°ticas avanzadas\nüíñ Soporte emocional\nüåê Wikipedia integrada\nüéµ Reconocimiento de m√∫sica\nüíª Abrir aplicaciones\n\n¬°Preg√∫ntame lo que quieras!`,
            buttons: ['¬°Comenzar!']
        });
    }, 1000);
});

app.on('window-all-closed', () => {
    if (process.platform !== 'darwin') app.quit();
});

app.on('will-quit', () => {
    globalShortcut.unregisterAll();
});